{
	"id": "2db64f4a7a3d6909cecf09eb09510016",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.5",
	"solcLongVersion": "0.6.5+commit.f956cc89",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AllowanceTarget.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2020-12-18\n*/\n\n// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: contracts/interface/IAllowanceTarget.sol\n\npragma solidity ^0.6.0;\n\ninterface IAllowanceTarget {\n    function setSpenderWithTimelock(address _newSpender) external;\n    function completeSetSpender() external;\n    function executeCall(address payable _target, bytes calldata _callData) external returns (bytes memory resultData);\n    function teardown() external;\n}\n\n// File: contracts/AllowanceTarget.sol\n\n\npragma solidity ^0.6.5;\n\n\n\n/**\n * @dev AllowanceTarget contract\n */\ncontract AllowanceTarget is IAllowanceTarget {\n    using Address for address;\n\n    uint256 constant private TIME_LOCK_DURATION = 1 days;\n\n    address public spender;\n    address public newSpender;\n    uint256 public timelockExpirationTime;\n\n    modifier onlySpender() {\n        require(spender == msg.sender, \"AllowanceTarget: not the spender\");\n        _;\n    }\n\n\n    constructor(address _spender) public {\n        require(_spender != address(0), \"AllowanceTarget: _spender should not be 0\");\n\n        // Set spender\n        spender = _spender;\n    }\n\n\n    function setSpenderWithTimelock(address _newSpender) override external onlySpender {\n        require(_newSpender.isContract(), \"AllowanceTarget: new spender not a contract\");\n        require(newSpender == address(0) && timelockExpirationTime == 0, \"AllowanceTarget: SetSpender in progress\");\n\n        timelockExpirationTime = now + TIME_LOCK_DURATION;\n        newSpender = _newSpender;\n    }\n\n    function completeSetSpender() override external {\n        require(timelockExpirationTime != 0, \"AllowanceTarget: no pending SetSpender\");\n        require(now >= timelockExpirationTime, \"AllowanceTarget: time lock not expired yet\");\n\n        // Set new spender\n        spender = newSpender;\n        // Reset\n        timelockExpirationTime = 0;\n        newSpender = address(0);\n    }\n\n\n    function teardown() override external onlySpender {\n        selfdestruct(payable(spender));\n    }\n\n\n    /// @dev Execute an arbitrary call. Only an authority can call this.\n    /// @param target The call target.\n    /// @param callData The call data.\n    /// @return resultData The data returned by the call.\n    function executeCall(\n        address payable target,\n        bytes calldata callData\n    )\n        override\n        external\n        onlySpender\n        returns (bytes memory resultData)\n    {\n        bool success;\n        (success, resultData) = target.call(callData);\n        if (!success) {\n            // Get the error message returned\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/AllowanceTarget.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/AllowanceTarget.sol\":245:5999  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AllowanceTarget.sol\":245:5999  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220b416ee297828e22c093404bbacd4a8b61bf00ec0ca7356d19f0e69734713799864736f6c63430006050033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b416ee297828e22c093404bbacd4a8b61bf00ec0ca7356d19f0e69734713799864736f6c63430006050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 AND 0xEE 0x29 PUSH25 0x28E22C093404BBACD4A8B61BF00EC0CA7356D19F0E69734713 PUSH26 0x9864736F6C634300060500330000000000000000000000000000 ",
							"sourceMap": "245:5754:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b416ee297828e22c093404bbacd4a8b61bf00ec0ca7356d19f0e69734713799864736f6c63430006050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 AND 0xEE 0x29 PUSH25 0x28E22C093404BBACD4A8B61BF00EC0CA7356D19F0E69734713 PUSH26 0x9864736F6C634300060500330000000000000000000000000000 ",
							"sourceMap": "245:5754:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 5999,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 5999,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b416ee297828e22c093404bbacd4a8b61bf00ec0ca7356d19f0e69734713799864736f6c63430006050033",
									".code": [
										{
											"begin": 245,
											"end": 5999,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 5999,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 5999,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 245,
											"end": 5999,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 5999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 5999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/AllowanceTarget.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AllowanceTarget.sol\":{\"keccak256\":\"0x3874d00b35d93e4fd89a29ee2d3852ad5794f47d0dada712ce2b8ced2f899ffa\",\"urls\":[\"bzz-raw://d3c819d98a63f1711a5042a23c1f2c048e483d80cf0b3211f40881ae0c89e6ea\",\"dweb:/ipfs/QmejTJUT5VoG3za5bcD82rAKgh6Z81ZUyHNWMwFqokfuHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"AllowanceTarget": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "completeSetSpender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "resultData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newSpender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newSpender",
									"type": "address"
								}
							],
							"name": "setSpenderWithTimelock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "spender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teardown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timelockExpirationTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "AllowanceTarget contract",
						"methods": {
							"executeCall(address,bytes)": {
								"details": "Execute an arbitrary call. Only an authority can call this.",
								"params": {
									"callData": "The call data.",
									"target": "The call target."
								},
								"returns": {
									"resultData": "The data returned by the call."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/AllowanceTarget.sol\":6483:8697  contract AllowanceTarget is IAllowanceTarget {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AllowanceTarget.sol\":6852:7034  constructor(address _spender) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/AllowanceTarget.sol\":6852:7034  constructor(address _spender) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"contracts/AllowanceTarget.sol\":6852:7034  constructor(address _spender) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/AllowanceTarget.sol\":6927:6928  0 */\n  0x00\n    /* \"contracts/AllowanceTarget.sol\":6907:6929  _spender != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/AllowanceTarget.sol\":6907:6915  _spender */\n  dup2\n    /* \"contracts/AllowanceTarget.sol\":6907:6929  _spender != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/AllowanceTarget.sol\":6899:6975  require(_spender != address(0), \"AllowanceTarget: _spender should not be 0\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x29\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_577fdc48386f3c97303b29c4b8fdbf200adf4e06840c3463255bd7dbaea4fa6f\n  0x29\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/AllowanceTarget.sol\":7019:7027  _spender */\n  dup1\n    /* \"contracts/AllowanceTarget.sol\":7009:7016  spender */\n  0x00\n  dup1\n    /* \"contracts/AllowanceTarget.sol\":7009:7027  spender = _spender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AllowanceTarget.sol\":6852:7034  constructor(address _spender) public {... */\n  pop\n    /* \"contracts/AllowanceTarget.sol\":6483:8697  contract AllowanceTarget is IAllowanceTarget {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_577fdc48386f3c97303b29c4b8fdbf200adf4e06840c3463255bd7dbaea4fa6f 416c6c6f77616e63655461726765743a205f7370656e6465722073686f756c64206e6f742062652030\n\nsub_0: assembly {\n        /* \"contracts/AllowanceTarget.sol\":6483:8697  contract AllowanceTarget is IAllowanceTarget {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/AllowanceTarget.sol\":6483:8697  contract AllowanceTarget is IAllowanceTarget {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbca8c7b5\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xbca8c7b5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbe6502e9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe8edc816\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf9c7a0d1\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x48e196d1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x782a533f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8c064e19\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/AllowanceTarget.sol\":7438:7819  function completeSetSpender() override external {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/AllowanceTarget.sol\":6653:6678  address public newSpender */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllowanceTarget.sol\":7041:7432  function setSpenderWithTimelock(address _newSpender) override external onlySpender {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_16:\n        /* \"contracts/AllowanceTarget.sol\":7041:7432  function setSpenderWithTimelock(address _newSpender) override external onlySpender {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_19:\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_20:\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_21:\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_22:\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllowanceTarget.sol\":7826:7923  function teardown() override external onlySpender {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/AllowanceTarget.sol\":6625:6647  address public spender */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllowanceTarget.sol\":6684:6721  uint256 public timelockExpirationTime */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllowanceTarget.sol\":7438:7819  function completeSetSpender() override external {... */\n    tag_12:\n        /* \"contracts/AllowanceTarget.sol\":7530:7531  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7504:7526  timelockExpirationTime */\n      sload(0x02)\n        /* \"contracts/AllowanceTarget.sol\":7504:7531  timelockExpirationTime != 0 */\n      eq\n      iszero\n        /* \"contracts/AllowanceTarget.sol\":7496:7574  require(timelockExpirationTime != 0, \"AllowanceTarget: no pending SetSpender\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1cc317600dd6a5d7bbf3184e144ab103ed10764080a317ddd8c3a1d44f4ef9fb\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/AllowanceTarget.sol\":7599:7621  timelockExpirationTime */\n      sload(0x02)\n        /* \"contracts/AllowanceTarget.sol\":7592:7595  now */\n      timestamp\n        /* \"contracts/AllowanceTarget.sol\":7592:7621  now >= timelockExpirationTime */\n      lt\n      iszero\n        /* \"contracts/AllowanceTarget.sol\":7584:7668  require(now >= timelockExpirationTime, \"AllowanceTarget: time lock not expired yet\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_10aa48a6740559c01befee714cbb961aa19e929d3cc300adf18d9bb50dbd547e\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/AllowanceTarget.sol\":7716:7726  newSpender */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":7706:7713  spender */\n      0x00\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":7706:7726  spender = newSpender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7778:7779  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7753:7775  timelockExpirationTime */\n      0x02\n        /* \"contracts/AllowanceTarget.sol\":7753:7779  timelockExpirationTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7810:7811  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7789:7799  newSpender */\n      0x01\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7789:7812  newSpender = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7438:7819  function completeSetSpender() override external {... */\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":6653:6678  address public newSpender */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":7041:7432  function setSpenderWithTimelock(address _newSpender) override external onlySpender {... */\n    tag_17:\n        /* \"contracts/AllowanceTarget.sol\":6780:6790  msg.sender */\n      caller\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6776  spender */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/AllowanceTarget.sol\":6761:6827  require(spender == msg.sender, \"AllowanceTarget: not the spender\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416c6c6f77616e63655461726765743a206e6f7420746865207370656e646572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"contracts/AllowanceTarget.sol\":7142:7166  _newSpender.isContract() */\n      tag_40\n        /* \"contracts/AllowanceTarget.sol\":7142:7153  _newSpender */\n      dup2\n        /* \"contracts/AllowanceTarget.sol\":7142:7164  _newSpender.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_41\n        /* \"contracts/AllowanceTarget.sol\":7142:7166  _newSpender.isContract() */\n      jump\t// in\n    tag_40:\n        /* \"contracts/AllowanceTarget.sol\":7134:7214  require(_newSpender.isContract(), \"AllowanceTarget: new spender not a contract\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3714051aaab2b8ecbd80caf649c0e0d87239616e3e5ed01deacaa0c3bfb3f21e\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/AllowanceTarget.sol\":7254:7255  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7232:7256  newSpender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":7232:7242  newSpender */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":7232:7256  newSpender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/AllowanceTarget.sol\":7232:7287  newSpender == address(0) && timelockExpirationTime == 0 */\n      dup1\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7286:7287  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7260:7282  timelockExpirationTime */\n      sload(0x02)\n        /* \"contracts/AllowanceTarget.sol\":7260:7287  timelockExpirationTime == 0 */\n      eq\n        /* \"contracts/AllowanceTarget.sol\":7232:7287  newSpender == address(0) && timelockExpirationTime == 0 */\n    tag_43:\n        /* \"contracts/AllowanceTarget.sol\":7224:7331  require(newSpender == address(0) && timelockExpirationTime == 0, \"AllowanceTarget: SetSpender in progress\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a6a9230dd5f075b105b1bc804c8e031d68d9f95fa5a84bc151c915de961756ab\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/AllowanceTarget.sol\":6612:6618  1 days */\n      0x015180\n        /* \"contracts/AllowanceTarget.sol\":7367:7370  now */\n      timestamp\n        /* \"contracts/AllowanceTarget.sol\":7367:7391  now + TIME_LOCK_DURATION */\n      add\n        /* \"contracts/AllowanceTarget.sol\":7342:7364  timelockExpirationTime */\n      0x02\n        /* \"contracts/AllowanceTarget.sol\":7342:7391  timelockExpirationTime = now + TIME_LOCK_DURATION */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7414:7425  _newSpender */\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":7401:7411  newSpender */\n      0x01\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":7401:7425  newSpender = _newSpender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllowanceTarget.sol\":7041:7432  function setSpenderWithTimelock(address _newSpender) override external onlySpender {... */\n      pop\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n    tag_23:\n        /* \"contracts/AllowanceTarget.sol\":8302:8325  bytes memory resultData */\n      0x60\n        /* \"contracts/AllowanceTarget.sol\":6780:6790  msg.sender */\n      caller\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6776  spender */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/AllowanceTarget.sol\":6761:6827  require(spender == msg.sender, \"AllowanceTarget: not the spender\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416c6c6f77616e63655461726765743a206e6f7420746865207370656e646572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/AllowanceTarget.sol\":8341:8353  bool success */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":8387:8393  target */\n      dup5\n        /* \"contracts/AllowanceTarget.sol\":8387:8398  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":8399:8407  callData */\n      dup5\n      dup5\n        /* \"contracts/AllowanceTarget.sol\":8387:8408  target.call(callData) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"contracts/AllowanceTarget.sol\":8387:8408  target.call(callData) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_49)\n        /* \"--CODEGEN--\":14:41   */\n    tag_50:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_49:\n      pop\n        /* \"contracts/AllowanceTarget.sol\":8363:8408  (success, resultData) = target.call(callData) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/AllowanceTarget.sol\":8423:8430  success */\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":8418:8689  if (!success) {... */\n      tag_51\n      jumpi\n        /* \"contracts/AllowanceTarget.sol\":8536:8540  0x40 */\n      0x40\n        /* \"contracts/AllowanceTarget.sol\":8530:8541  mload(0x40) */\n      mload\n        /* \"contracts/AllowanceTarget.sol\":8570:8586  returndatasize() */\n      returndatasize\n        /* \"contracts/AllowanceTarget.sol\":8626:8630  size */\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":8623:8624  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":8618:8621  ptr */\n      dup4\n        /* \"contracts/AllowanceTarget.sol\":8603:8631  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"contracts/AllowanceTarget.sol\":8660:8664  size */\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":8655:8658  ptr */\n      dup3\n        /* \"contracts/AllowanceTarget.sol\":8648:8665  revert(ptr, size) */\n      revert\n        /* \"contracts/AllowanceTarget.sol\":8501:8679  {... */\n    tag_51:\n        /* \"contracts/AllowanceTarget.sol\":6837:6838  _ */\n      pop\n        /* \"contracts/AllowanceTarget.sol\":8139:8695  function executeCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":7826:7923  function teardown() override external onlySpender {... */\n    tag_29:\n        /* \"contracts/AllowanceTarget.sol\":6780:6790  msg.sender */\n      caller\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6776  spender */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":6769:6790  spender == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/AllowanceTarget.sol\":6761:6827  require(spender == msg.sender, \"AllowanceTarget: not the spender\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416c6c6f77616e63655461726765743a206e6f7420746865207370656e646572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/AllowanceTarget.sol\":7907:7914  spender */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllowanceTarget.sol\":7886:7916  selfdestruct(payable(spender)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/AllowanceTarget.sol\":6625:6647  address public spender */\n    tag_31:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":6684:6721  uint256 public timelockExpirationTime */\n    tag_33:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/AllowanceTarget.sol\":837:1250  function isContract(address account) internal view returns (bool) {... */\n    tag_41:\n        /* \"contracts/AllowanceTarget.sol\":897:901  bool */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":1100:1112  uint256 size */\n      dup1\n        /* \"contracts/AllowanceTarget.sol\":1209:1216  account */\n      dup3\n        /* \"contracts/AllowanceTarget.sol\":1197:1217  extcodesize(account) */\n      extcodesize\n        /* \"contracts/AllowanceTarget.sol\":1189:1217  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/AllowanceTarget.sol\":1242:1243  0 */\n      0x00\n        /* \"contracts/AllowanceTarget.sol\":1235:1239  size */\n      dup2\n        /* \"contracts/AllowanceTarget.sol\":1235:1243  size > 0 */\n      gt\n        /* \"contracts/AllowanceTarget.sol\":1228:1243  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/AllowanceTarget.sol\":837:1250  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_10aa48a6740559c01befee714cbb961aa19e929d3cc300adf18d9bb50dbd547e 416c6c6f77616e63655461726765743a2074696d65206c6f636b206e6f74206578706972656420796574\n    data_1cc317600dd6a5d7bbf3184e144ab103ed10764080a317ddd8c3a1d44f4ef9fb 416c6c6f77616e63655461726765743a206e6f2070656e64696e67205365745370656e646572\n    data_3714051aaab2b8ecbd80caf649c0e0d87239616e3e5ed01deacaa0c3bfb3f21e 416c6c6f77616e63655461726765743a206e6577207370656e646572206e6f74206120636f6e7472616374\n    data_a6a9230dd5f075b105b1bc804c8e031d68d9f95fa5a84bc151c915de961756ab 416c6c6f77616e63655461726765743a205365745370656e64657220696e2070726f6772657373\n\n    auxdata: 0xa2646970667358221220e5c1aa501411d1287d08ca1850bfbd57453f3fdc7ef90b0e9642330f241d299c64736f6c63430006050033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610b12380380610b128339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610ae96029913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506109cf8061011a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bca8c7b51161005b578063bca8c7b51461011a578063be6502e91461022c578063e8edc81614610236578063f9c7a0d1146102805761007d565b806348e196d114610082578063782a533f1461008c5780638c064e19146100d6575b600080fd5b61008a61029e565b005b610094610403565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610118600480360360208110156100ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610429565b005b6101b16004803603604081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561016d57600080fd5b82018360208201111561017f57600080fd5b803590602001918460018302840111640100000000831117156101a157600080fd5b9091929391929390505050610664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f15780820151818401526020810190506101d6565b50505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102346107bd565b005b61023e6108b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102886108de565b6040518082815260200191505060405180910390f35b600060025414156102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109226026913960400191505060405180910390fd5b600254421015610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806108f8602a913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002819055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b61050a8173ffffffffffffffffffffffffffffffffffffffff166108e4565b61055f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610948602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105bf57506000600254145b610614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806109736027913960400191505060405180910390fd5b62015180420160028190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60603373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610728576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1684846040518083838082843780830192505050925050506000604051808303816000865af19150503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b508093508192505050806107b5576040513d806000833e8082fd5b509392505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461087f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080823b90506000811191505091905056fe416c6c6f77616e63655461726765743a2074696d65206c6f636b206e6f74206578706972656420796574416c6c6f77616e63655461726765743a206e6f2070656e64696e67205365745370656e646572416c6c6f77616e63655461726765743a206e6577207370656e646572206e6f74206120636f6e7472616374416c6c6f77616e63655461726765743a205365745370656e64657220696e2070726f6772657373a2646970667358221220e5c1aa501411d1287d08ca1850bfbd57453f3fdc7ef90b0e9642330f241d299c64736f6c63430006050033416c6c6f77616e63655461726765743a205f7370656e6465722073686f756c64206e6f742062652030",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB12 CODESIZE SUB DUP1 PUSH2 0xB12 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE9 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x9CF DUP1 PUSH2 0x11A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCA8C7B5 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBCA8C7B5 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBE6502E9 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xE8EDC816 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF9C7A0D1 EQ PUSH2 0x280 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x48E196D1 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x782A533F EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8C064E19 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x7BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x922 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F8 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x948 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5BF JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x973 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 TIMESTAMP ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x79A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH13 0x6C6F77616E6365546172676574 GASPRICE KECCAK256 PUSH21 0x696D65206C6F636B206E6F74206578706972656420 PUSH26 0x6574416C6C6F77616E63655461726765743A206E6F2070656E64 PUSH10 0x6E67205365745370656E PUSH5 0x6572416C6C PUSH16 0x77616E63655461726765743A206E6577 KECCAK256 PUSH20 0x70656E646572206E6F74206120636F6E74726163 PUSH21 0x416C6C6F77616E63655461726765743A2053657453 PUSH17 0x656E64657220696E2070726F6772657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC1 0xAA POP EQ GT 0xD1 0x28 PUSH30 0x8CA1850BFBD57453F3FDC7EF90B0E9642330F241D299C64736F6C634300 MOD SDIV STOP CALLER COINBASE PUSH13 0x6C6F77616E6365546172676574 GASPRICE KECCAK256 0x5F PUSH20 0x70656E6465722073686F756C64206E6F74206265 KECCAK256 ADDRESS ",
							"sourceMap": "6483:2214:0:-:0;;;6852:182;5:9:-1;2:2;;;27:1;24;17:12;2:2;6852:182:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6852:182:0;;;;;;;;;;;;;;;;6927:1;6907:22;;:8;:22;;;;6899:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7019:8;7009:7;;:18;;;;;;;;;;;;;;;;;;6852:182;6483:2214;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bca8c7b51161005b578063bca8c7b51461011a578063be6502e91461022c578063e8edc81614610236578063f9c7a0d1146102805761007d565b806348e196d114610082578063782a533f1461008c5780638c064e19146100d6575b600080fd5b61008a61029e565b005b610094610403565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610118600480360360208110156100ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610429565b005b6101b16004803603604081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561016d57600080fd5b82018360208201111561017f57600080fd5b803590602001918460018302840111640100000000831117156101a157600080fd5b9091929391929390505050610664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f15780820151818401526020810190506101d6565b50505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102346107bd565b005b61023e6108b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102886108de565b6040518082815260200191505060405180910390f35b600060025414156102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109226026913960400191505060405180910390fd5b600254421015610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806108f8602a913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002819055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b61050a8173ffffffffffffffffffffffffffffffffffffffff166108e4565b61055f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610948602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105bf57506000600254145b610614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806109736027913960400191505060405180910390fd5b62015180420160028190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60603373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610728576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1684846040518083838082843780830192505050925050506000604051808303816000865af19150503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b508093508192505050806107b5576040513d806000833e8082fd5b509392505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461087f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f416c6c6f77616e63655461726765743a206e6f7420746865207370656e64657281525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080823b90506000811191505091905056fe416c6c6f77616e63655461726765743a2074696d65206c6f636b206e6f74206578706972656420796574416c6c6f77616e63655461726765743a206e6f2070656e64696e67205365745370656e646572416c6c6f77616e63655461726765743a206e6577207370656e646572206e6f74206120636f6e7472616374416c6c6f77616e63655461726765743a205365745370656e64657220696e2070726f6772657373a2646970667358221220e5c1aa501411d1287d08ca1850bfbd57453f3fdc7ef90b0e9642330f241d299c64736f6c63430006050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCA8C7B5 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBCA8C7B5 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBE6502E9 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xE8EDC816 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF9C7A0D1 EQ PUSH2 0x280 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x48E196D1 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x782A533F EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8C064E19 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x7BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x922 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F8 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x948 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5BF JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x973 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 TIMESTAMP ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x79A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH13 0x6C6F77616E6365546172676574 GASPRICE KECCAK256 PUSH21 0x696D65206C6F636B206E6F74206578706972656420 PUSH26 0x6574416C6C6F77616E63655461726765743A206E6F2070656E64 PUSH10 0x6E67205365745370656E PUSH5 0x6572416C6C PUSH16 0x77616E63655461726765743A206E6577 KECCAK256 PUSH20 0x70656E646572206E6F74206120636F6E74726163 PUSH21 0x416C6C6F77616E63655461726765743A2053657453 PUSH17 0x656E64657220696E2070726F6772657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC1 0xAA POP EQ GT 0xD1 0x28 PUSH30 0x8CA1850BFBD57453F3FDC7EF90B0E9642330F241D299C64736F6C634300 MOD SDIV STOP CALLER ",
							"sourceMap": "6483:2214:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6483:2214:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;7438:381:0;;;:::i;:::-;;6653:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7041:391;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7041:391:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;8139:556;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8139:556:0;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;8139:556:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;8139:556:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8139:556:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8139:556:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7826:97;;;:::i;:::-;;6625:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6684:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7438:381;7530:1;7504:22;;:27;;7496:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7599:22;;7592:3;:29;;7584:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7716:10;;;;;;;;;;;7706:7;;:20;;;;;;;;;;;;;;;;;;7778:1;7753:22;:26;;;;7810:1;7789:10;;:23;;;;;;;;;;;;;;;;;;7438:381::o;6653:25::-;;;;;;;;;;;;;:::o;7041:391::-;6780:10;6769:21;;:7;;;;;;;;;;;:21;;;6761:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7142:24:::1;:11;:22;;;:24::i;:::-;7134:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7254:1;7232:24;;:10;;;;;;;;;;;:24;;;:55;;;;;7286:1;7260:22;;:27;7232:55;7224:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6612:6;7367:3;:24;7342:22;:49;;;;7414:11;7401:10;;:24;;;;;;;;;;;;;;;;;;7041:391:::0;:::o;8139:556::-;8302:23;6780:10;6769:21;;:7;;;;;;;;;;;:21;;;6761:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8341:12:::1;8387:6;:11;;8399:8;;8387:21;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;8387:21:0;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;8363:45:0;;;;;;;;8423:7;8418:271;;8536:4;8530:11;8570:16;8626:4;8623:1;8618:3;8603:28;8660:4;8655:3;8648:17;8501:178;6837:1;8139:556:::0;;;;;:::o;7826:97::-;6780:10;6769:21;;:7;;;;;;;;;;;:21;;;6761:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7907:7:::1;::::0;::::1;;;;;;;;;7886:30;;;6625:22:::0;;;;;;;;;;;;;:::o;6684:37::-;;;;:::o;837:413::-;897:4;1100:12;1209:7;1197:20;1189:28;;1242:1;1235:4;:8;1228:15;;;837:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "502200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"completeSetSpender()": "infinite",
								"executeCall(address,bytes)": "infinite",
								"newSpender()": "1076",
								"setSpenderWithTimelock(address)": "infinite",
								"spender()": "1097",
								"teardown()": "31872",
								"timelockExpirationTime()": "1071"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6927,
									"end": 6928,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6907,
									"end": 6915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6907,
									"end": 6929,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH data",
									"source": 0,
									"value": "577FDC48386F3C97303B29C4B8FDBF200ADF4E06840C3463255BD7DBAEA4FA6F"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6899,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 7027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7009,
									"end": 7016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6483,
									"end": 8697,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5c1aa501411d1287d08ca1850bfbd57453f3fdc7ef90b0e9642330f241d299c64736f6c63430006050033",
									".code": [
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "BCA8C7B5"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "BCA8C7B5"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "BE6502E9"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "E8EDC816"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "F9C7A0D1"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "48E196D1"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "782A533F"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH",
											"source": 0,
											"value": "8C064E19"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6483,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7531,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH data",
											"source": 0,
											"value": "1CC317600DD6A5D7BBF3184E144AB103ED10764080A317DDD8C3A1D44F4EF9FB"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7496,
											"end": 7574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7595,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH data",
											"source": 0,
											"value": "10AA48A6740559C01BEFEE714CBB961AA19E929D3CC300ADF18D9BB50DBD547E"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7584,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7775,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7753,
											"end": 7779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 7779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 7779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 7779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6790,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7142,
											"end": 7164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7142,
											"end": 7166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH data",
											"source": 0,
											"value": "3714051AAAB2B8ECBD80CAF649C0E0D87239616E3E5ED01DEACAA0C3BFB3F21E"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7256,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7282,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7260,
											"end": 7282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7232,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH data",
											"source": 0,
											"value": "A6A9230DD5F075B105B1BC804C8E031D68D9F95FA5A84BC151C915DE961756AB"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7224,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 7367,
											"end": 7370,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7364,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7342,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7391,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7414,
											"end": 7425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7401,
											"end": 7411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8325,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6780,
											"end": 6790,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8387,
											"end": 8398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 8407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 8407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 57,
											"end": 60,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 49,
											"end": 55,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 35,
											"end": 61,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 35,
											"end": 61,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8408,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8418,
											"end": 8689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8536,
											"end": 8540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8530,
											"end": 8541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8586,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8631,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8648,
											"end": 8665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8501,
											"end": 8679,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8501,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7826,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6790,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "416C6C6F77616E63655461726765743A206E6F7420746865207370656E646572"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6761,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7886,
											"end": 7916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7886,
											"end": 7916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7886,
											"end": 7916,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6647,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1250,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"10AA48A6740559C01BEFEE714CBB961AA19E929D3CC300ADF18D9BB50DBD547E": "416c6c6f77616e63655461726765743a2074696d65206c6f636b206e6f74206578706972656420796574",
										"1CC317600DD6A5D7BBF3184E144AB103ED10764080A317DDD8C3A1D44F4EF9FB": "416c6c6f77616e63655461726765743a206e6f2070656e64696e67205365745370656e646572",
										"3714051AAAB2B8ECBD80CAF649C0E0D87239616E3E5ED01DEACAA0C3BFB3F21E": "416c6c6f77616e63655461726765743a206e6577207370656e646572206e6f74206120636f6e7472616374",
										"A6A9230DD5F075B105B1BC804C8E031D68D9F95FA5A84BC151C915DE961756AB": "416c6c6f77616e63655461726765743a205365745370656e64657220696e2070726f6772657373"
									}
								},
								"577FDC48386F3C97303B29C4B8FDBF200ADF4E06840C3463255BD7DBAEA4FA6F": "416c6c6f77616e63655461726765743a205f7370656e6465722073686f756c64206e6f742062652030"
							}
						},
						"methodIdentifiers": {
							"completeSetSpender()": "48e196d1",
							"executeCall(address,bytes)": "bca8c7b5",
							"newSpender()": "782a533f",
							"setSpenderWithTimelock(address)": "8c064e19",
							"spender()": "e8edc816",
							"teardown()": "be6502e9",
							"timelockExpirationTime()": "f9c7a0d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"completeSetSpender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"resultData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSpender\",\"type\":\"address\"}],\"name\":\"setSpenderWithTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teardown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockExpirationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"AllowanceTarget contract\",\"methods\":{\"executeCall(address,bytes)\":{\"details\":\"Execute an arbitrary call. Only an authority can call this.\",\"params\":{\"callData\":\"The call data.\",\"target\":\"The call target.\"},\"returns\":{\"resultData\":\"The data returned by the call.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/AllowanceTarget.sol\":\"AllowanceTarget\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AllowanceTarget.sol\":{\"keccak256\":\"0x3874d00b35d93e4fd89a29ee2d3852ad5794f47d0dada712ce2b8ced2f899ffa\",\"urls\":[\"bzz-raw://d3c819d98a63f1711a5042a23c1f2c048e483d80cf0b3211f40881ae0c89e6ea\",\"dweb:/ipfs/QmejTJUT5VoG3za5bcD82rAKgh6Z81ZUyHNWMwFqokfuHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
								"label": "spender",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
								"label": "newSpender",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 232,
								"contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
								"label": "timelockExpirationTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IAllowanceTarget": {
					"abi": [
						{
							"inputs": [],
							"name": "completeSetSpender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_callData",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "resultData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newSpender",
									"type": "address"
								}
							],
							"name": "setSpenderWithTimelock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teardown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"completeSetSpender()": "48e196d1",
							"executeCall(address,bytes)": "bca8c7b5",
							"setSpenderWithTimelock(address)": "8c064e19",
							"teardown()": "be6502e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"completeSetSpender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_callData\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"resultData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSpender\",\"type\":\"address\"}],\"name\":\"setSpenderWithTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teardown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/AllowanceTarget.sol\":\"IAllowanceTarget\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AllowanceTarget.sol\":{\"keccak256\":\"0x3874d00b35d93e4fd89a29ee2d3852ad5794f47d0dada712ce2b8ced2f899ffa\",\"urls\":[\"bzz-raw://d3c819d98a63f1711a5042a23c1f2c048e483d80cf0b3211f40881ae0c89e6ea\",\"dweb:/ipfs/QmejTJUT5VoG3za5bcD82rAKgh6Z81ZUyHNWMwFqokfuHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/AllowanceTarget.sol": {
				"ast": {
					"absolutePath": "contracts/AllowanceTarget.sol",
					"exportedSymbols": {
						"Address": [
							194
						],
						"AllowanceTarget": [
							384
						],
						"IAllowanceTarget": [
							216
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "152:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "177:67:0",
								"text": "@dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "903:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 18,
														"src": "1100:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1100:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1187:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1189:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1209:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1197:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1189:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1209:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1189:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1178:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1235:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1242:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1235:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1228:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "267:565:0",
										"text": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "856:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "897:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:6:0"
									},
									"scope": 194,
									"src": "837:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2238:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2264:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2256:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2256:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2256:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2256:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2281:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2256:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2248:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 52,
														"src": "2410:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2428:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2428:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2451:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2428:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2428:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2409:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2490:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2473:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1256:906:0",
										"text": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2186:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2185:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:0:0"
									},
									"scope": 194,
									"src": "2167:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3388:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3430:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3403:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3396:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2564:730:0",
										"text": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     * Requirements:\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n     * _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3321:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3337:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3374:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3373:14:0"
									},
									"scope": 194,
									"src": "3299:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3809:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3863:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3866:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3826:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3819:60:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3476:211:0",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3714:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3730:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3749:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3749:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3713:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3795:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3794:14:0"
									},
									"scope": 194,
									"src": "3692:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4361:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4421:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															143
														],
														"referencedDeclaration": 143,
														"src": "4378:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4371:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3892:351:0",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut also transferring `value` wei to `target`.\n     * Requirements:\n     * - the calling contract must have an ETH balance of at least `value`.\n- the called Solidity function must be `payable`.\n     * _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4295:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4295:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4314:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4278:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4347:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4346:14:0"
									},
									"scope": 194,
									"src": "4248:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4861:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4887:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4879:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4879:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4879:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4879:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4904:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4879:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4911:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4871:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4871:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "4992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5000:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 138,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5006:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5013:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 135,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "4969:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "4962:64:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4478:237:0",
										"text": "@dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\nwith `errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4767:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4801:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4750:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4847:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4846:14:0"
									},
									"scope": 194,
									"src": "4720:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "5183:814:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "5212:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5201:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5201:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5221:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5193:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5193:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "5324:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5324:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "5338:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5338:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "5396:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "5365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5365:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 169,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "5385:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5365:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5323:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 174,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 164,
													"src": "5415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "5472:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "5556:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5556:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5576:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5556:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 188,
																"nodeType": "Block",
																"src": "5928:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 185,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "5953:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 184,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5946:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5946:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 187,
																		"nodeType": "ExpressionStatement",
																		"src": "5946:20:0"
																	}
																]
															},
															"id": 189,
															"nodeType": "IfStatement",
															"src": "5552:429:0",
															"trueBody": {
																"id": 183,
																"nodeType": "Block",
																"src": "5579:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5763:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5785:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5814:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5808:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5808:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5789:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5857:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5861:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5853:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5853:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5874:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5846:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5846:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5846:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 166,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5814:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 166,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5861:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 182,
																		"nodeType": "InlineAssembly",
																		"src": "5754:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "5411:580:0",
												"trueBody": {
													"id": 177,
													"nodeType": "Block",
													"src": "5424:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 175,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "5445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 155,
															"id": 176,
															"nodeType": "Return",
															"src": "5438:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5071:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5087:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5106:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5124:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5124:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5070:81:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5169:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5168:14:0"
									},
									"scope": 194,
									"src": "5039:958:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 385,
							"src": "245:5754:0"
						},
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6052:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 216,
							"linearizedBaseContracts": [
								216
							],
							"name": "IAllowanceTarget",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8c064e19",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSpenderWithTimelock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"name": "_newSpender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "6142:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6141:21:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6171:0:0"
									},
									"scope": 216,
									"src": "6110:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "48e196d1",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeSetSpender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6204:2:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6215:0:0"
									},
									"scope": 216,
									"src": "6177:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bca8c7b5",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "6242:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6242:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"name": "_callData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "6267:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6267:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6241:51:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "resultData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "6311:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6310:25:0"
									},
									"scope": 216,
									"src": "6221:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "be6502e9",
									"id": 215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "teardown",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6358:2:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6369:0:0"
									},
									"scope": 216,
									"src": "6341:29:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "6077:295:0"
						},
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "6415:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 219,
										"name": "IAllowanceTarget",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 216,
										"src": "6511:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllowanceTarget_$216",
											"typeString": "contract IAllowanceTarget"
										}
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "6511:16:0"
								}
							],
							"contractDependencies": [
								216
							],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "6442:40:0",
								"text": "@dev AllowanceTarget contract"
							},
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								216
							],
							"name": "AllowanceTarget",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 223,
									"libraryName": {
										"contractScope": null,
										"id": 221,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 194,
										"src": "6540:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$194",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "6534:26:0",
									"typeName": {
										"id": 222,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6552:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 226,
									"name": "TIME_LOCK_DURATION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 384,
									"src": "6566:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6612:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e8edc816",
									"id": 228,
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 384,
									"src": "6625:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6625:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "782a533f",
									"id": 230,
									"name": "newSpender",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 384,
									"src": "6653:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6653:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9c7a0d1",
									"id": 232,
									"name": "timelockExpirationTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 384,
									"src": "6684:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6684:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6751:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 235,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "6769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6769:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a206e6f7420746865207370656e646572",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6792:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a886b0a904b917fed01cd9673a0018fc1e28bc4b42c24bed5f11c19a0e34cdf",
																"typeString": "literal_string \"AllowanceTarget: not the spender\""
															},
															"value": "AllowanceTarget: not the spender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a886b0a904b917fed01cd9673a0018fc1e28bc4b42c24bed5f11c19a0e34cdf",
																"typeString": "literal_string \"AllowanceTarget: not the spender\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6761:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "6761:66:0"
											},
											{
												"id": 242,
												"nodeType": "PlaceholderStatement",
												"src": "6837:1:0"
											}
										]
									},
									"documentation": null,
									"id": 244,
									"name": "onlySpender",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:2:0"
									},
									"src": "6728:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6889:145:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "6907:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6927:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6919:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6919:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6919:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6907:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a205f7370656e6465722073686f756c64206e6f742062652030",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6931:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_577fdc48386f3c97303b29c4b8fdbf200adf4e06840c3463255bd7dbaea4fa6f",
																"typeString": "literal_string \"AllowanceTarget: _spender should not be 0\""
															},
															"value": "AllowanceTarget: _spender should not be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_577fdc48386f3c97303b29c4b8fdbf200adf4e06840c3463255bd7dbaea4fa6f",
																"typeString": "literal_string \"AllowanceTarget: _spender should not be 0\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6899:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "6899:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 259,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 260,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "7019:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7009:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "7009:18:0"
											}
										]
									},
									"documentation": null,
									"id": 264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "6864:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6863:18:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6889:0:0"
									},
									"scope": 384,
									"src": "6852:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										200
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "7124:308:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 273,
																	"name": "_newSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "7142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "7142:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7142:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a206e6577207370656e646572206e6f74206120636f6e7472616374",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7168:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3714051aaab2b8ecbd80caf649c0e0d87239616e3e5ed01deacaa0c3bfb3f21e",
																"typeString": "literal_string \"AllowanceTarget: new spender not a contract\""
															},
															"value": "AllowanceTarget: new spender not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3714051aaab2b8ecbd80caf649c0e0d87239616e3e5ed01deacaa0c3bfb3f21e",
																"typeString": "literal_string \"AllowanceTarget: new spender not a contract\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7134:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "7134:80:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 280,
																	"name": "newSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7232:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7254:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7246:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 281,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7246:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7246:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7232:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 286,
																	"name": "timelockExpirationTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "7260:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7286:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7260:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7232:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a205365745370656e64657220696e2070726f6772657373",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7289:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6a9230dd5f075b105b1bc804c8e031d68d9f95fa5a84bc151c915de961756ab",
																"typeString": "literal_string \"AllowanceTarget: SetSpender in progress\""
															},
															"value": "AllowanceTarget: SetSpender in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6a9230dd5f075b105b1bc804c8e031d68d9f95fa5a84bc151c915de961756ab",
																"typeString": "literal_string \"AllowanceTarget: SetSpender in progress\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7224:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "7224:107:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "timelockExpirationTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7342:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 294,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -17,
															"src": "7367:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 295,
															"name": "TIME_LOCK_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7373:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7367:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7342:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7342:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 299,
														"name": "newSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "7401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 300,
														"name": "_newSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7414:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7401:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "7401:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8c064e19",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 270,
											"modifierName": {
												"argumentTypes": null,
												"id": 269,
												"name": "onlySpender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "7112:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7112:11:0"
										}
									],
									"name": "setSpenderWithTimelock",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7094:8:0"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"name": "_newSpender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "7073:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:21:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7124:0:0"
									},
									"scope": 384,
									"src": "7041:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										203
									],
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "7486:333:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 309,
																"name": "timelockExpirationTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7504:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7530:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7504:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a206e6f2070656e64696e67205365745370656e646572",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7533:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cc317600dd6a5d7bbf3184e144ab103ed10764080a317ddd8c3a1d44f4ef9fb",
																"typeString": "literal_string \"AllowanceTarget: no pending SetSpender\""
															},
															"value": "AllowanceTarget: no pending SetSpender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cc317600dd6a5d7bbf3184e144ab103ed10764080a317ddd8c3a1d44f4ef9fb",
																"typeString": "literal_string \"AllowanceTarget: no pending SetSpender\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7496:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "7496:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "7592:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "timelockExpirationTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7599:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7592:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c6f77616e63655461726765743a2074696d65206c6f636b206e6f74206578706972656420796574",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7623:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10aa48a6740559c01befee714cbb961aa19e929d3cc300adf18d9bb50dbd547e",
																"typeString": "literal_string \"AllowanceTarget: time lock not expired yet\""
															},
															"value": "AllowanceTarget: time lock not expired yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10aa48a6740559c01befee714cbb961aa19e929d3cc300adf18d9bb50dbd547e",
																"typeString": "literal_string \"AllowanceTarget: time lock not expired yet\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7584:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "7584:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 322,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 323,
														"name": "newSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "7716:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7706:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "7706:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 326,
														"name": "timelockExpirationTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7753:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7778:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7753:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7753:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "newSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "7789:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 331,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "7789:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "7789:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "48e196d1",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "completeSetSpender",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7468:8:0"
									},
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7465:2:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7486:0:0"
									},
									"scope": 384,
									"src": "7438:381:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "7876:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 347,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "7907:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7899:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7899:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7899:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 344,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -21,
														"src": "7886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7886:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "7886:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "be6502e9",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 342,
											"modifierName": {
												"argumentTypes": null,
												"id": 341,
												"name": "onlySpender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "7864:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7864:11:0"
										}
									],
									"name": "teardown",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7846:8:0"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7876:0:0"
									},
									"scope": 384,
									"src": "7826:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										212
									],
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "8331:364:0",
										"statements": [
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 382,
														"src": "8341:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 365,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8341:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 368,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "8364:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"argumentTypes": null,
																"id": 369,
																"name": "resultData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "8373:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 370,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8363:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 373,
																"name": "callData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "8399:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 371,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8387:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8387:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8387:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "8363:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8363:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8422:8:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 377,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "8423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 381,
												"nodeType": "IfStatement",
												"src": "8418:271:0",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "8432:257:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8501:178:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8519:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8536:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8530:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8530:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8523:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8558:28:0",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "returndatasize",
																				"nodeType": "YulIdentifier",
																				"src": "8570:14:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8570:16:0"
																		},
																		"variables": [
																			{
																				"name": "size",
																				"nodeType": "YulTypedName",
																				"src": "8562:4:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8618:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8623:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "size",
																					"nodeType": "YulIdentifier",
																					"src": "8626:4:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8603:14:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8603:28:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8603:28:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8655:3:0"
																				},
																				{
																					"name": "size",
																					"nodeType": "YulIdentifier",
																					"src": "8660:4:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8648:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8648:17:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8648:17:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [],
															"id": 379,
															"nodeType": "InlineAssembly",
															"src": "8492:187:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "7930:204:0",
										"text": "@dev Execute an arbitrary call. Only an authority can call this.\n @param target The call target.\n @param callData The call data.\n @return resultData The data returned by the call."
									},
									"functionSelector": "bca8c7b5",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 361,
											"modifierName": {
												"argumentTypes": null,
												"id": 360,
												"name": "onlySpender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "8273:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8273:11:0"
										}
									],
									"name": "executeCall",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8239:8:0"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "8169:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8169:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"name": "callData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "8201:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8159:71:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"name": "resultData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "8302:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8301:25:0"
									},
									"scope": 384,
									"src": "8139:556:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "6483:2214:0"
						}
					],
					"src": "152:8545:0"
				},
				"id": 0
			}
		}
	}
}